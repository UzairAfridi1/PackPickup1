@model PackPickup1.ViewModels.CustomerViewModel

@{
    ViewBag.Title = "Customer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("AddCustomer", "Account"))
{
    @Html.AntiForgeryToken()


    <h1 class="text-center">Customer</h1>
    <hr class="media-body" />
    <div class="col col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 ">
        <img src="~/Images/avatar2.png" class="avatar img-circle" alt=""
             style="width:150px;" id="user_img">
        <hr />
        <div class="form-group">
            <input type="file" id="user_img" name="profileImage" value="@Model.Customer.Image" onchange="show(this)" accept="image/*" />
        </div>
    </div>

        <div class="row">

            <div class="col col-6 col-sm-6 col-md-6 col-lg-6 col-xl-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Area, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.Area, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer.Area, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Nationality, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer.Nationality, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="col col-6 col-sm-6 col-md-6 col-lg-6 col-xl-6">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Customer.Id, new SelectList(Model.Countries, "Id", "Name"), "Select Country", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Customer.Country, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.State, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Customer.StateId, new SelectList(Model.States, "StateId", "Name"), "Select State", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Customer.State, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="col col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Customer.CityId, new SelectList(Model.Cities, "CityId", "Name"), "Select City", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Customer.City, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-outline-primary" />
            </div>
        </div>


        }

        @section Scripts {

            <script>
                function show(input) {
                    if (input.files && input.files[0]) {
                        var filerdr = new FileReader();
                        filerdr.onload = function (e) {
                            $('#user_img').attr('src', e.target.result);
                        }
                        filerdr.readAsDataURL(input.files[0]);
                    }
                }
            </script>



            @Scripts.Render("~/bundles/jqueryval")
        }
